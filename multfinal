// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

module mkmultfinal(clk, a, b, p,ce);
input clk;
input ce;
(*keep = "True"*)input[16 - 1 : 0] a; 
(*keep = "True"*)input[16 - 1 : 0] b;
output[32 - 1 : 0] p;

reg signed [16 - 1 : 0] a_reg0;
reg signed [16 - 1 : 0] b_reg0;
wire signed [32 - 1 : 0] tmp_product;
reg signed [32 - 1 : 0] buff0;
reg signed [32 - 1 : 0] buff1;
reg signed [32 - 1 : 0] buff2;

assign p = buff2;
assign tmp_product = a_reg0 * b_reg0;
always @ (posedge clk) begin
if(ce) begin
    a_reg0 <= a;
    b_reg0 <= b;
    buff0 <= tmp_product;
    buff1 <= buff0;
    buff2 <= buff1;
end
end
endmodule



