vec    <=     [1,2,1,0,0,0,-1,-2,-1]<Constant,Vector>;
vec2   <=     [1,0,-1,2,0,-2,1,0,-1]<Constant,Vector>;
img    <=     [256,256,0]<Image>;
src    <=     [img,2]<Source>;
tile   <=     [src,  4, 3, 2, 1,1]<Tile>;
Ix     <=     [tile,3,vec,2]<Convolution>;
Iy     <=     [tile,3,vec2,2]<Convolution>;

magn <= {

                DataType gx, gy;
                if(x[0] < 0) begin
                    Bit#(16) data = pack(x[0]);
                    Bit#(1) one = 1;
                    data = invert(data);
                    Bit#(16) res = truncate(data + zeroExtend(one));
                    gx = unpack(res);
                end
                else
                       gx = x[0];

                if(x[1] < 0) begin
                    Bit#(16) data = pack(x[1]);
                    Bit#(1) one = 1;
                    data = invert(data);
                    Bit#(16) res = truncate(data + zeroExtend(one));
                    gy = unpack(res);
                end
                else
                       gy = x[1];

                return expr(gx + gy);

        }[Ix,Iy,2]<Point>;



